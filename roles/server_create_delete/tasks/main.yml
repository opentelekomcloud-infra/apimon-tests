---
# tasks file for roles/server_create_delete

- block:
  - name: Create Server in {{ availability_zone }}
    openstack.cloud.server:
      auto_ip: false
      availability_zone: "{{ availability_zone | default(omit) }}"
      name: "{{ server_fqdn }}"
      image: "{{ server_image }}"
      flavor: "{{ server_flavor }}"
      key_name: "{{ server_keypair_name }}"
      network: "{{ server_net }}"
      security_groups: "{{ security_group }}"
      # WARN: template and use of vars may cause replacement of \" to \'
      userdata: "{{ lookup('template', 'coreos-ignition.json.j2') | to_json | string }}"
    tags:
      - "metric=create_server{{ metric_suffix }}"
    register: server

  - name: get server id
    set_fact:
      server_id: "{{ server.server.id }}"
  
  - name: Attach FIP
    openstack.cloud.floating_ip:
      server: "{{ server_id }}"
    tags:
      - "metric=create_server{{ metric_suffix }}"
      - "az={{ availability_zone }}"
  
  - name: get server info
    openstack.cloud.server_info:
      server: "{{ server_id }}"
    register: server
    tags:
      - "metric=create_server{{ metric_suffix }}"
      - "az={{ availability_zone }}"
  
  - set_fact:
      server_ip: "{{ server['servers'][0]['access_ipv4'] }}"
    tags: 
      - "metric=create_server{{ metric_suffix }}"
      - "az={{ availability_zone }}"
  
  # Wait for the server to really start and become accessible
  - name: Wait for SSH port to become active
    ansible.builtin.wait_for:
      port: 22
      host: "{{ server_ip }}"
      timeout: 300
    tags: ["az={{ availability_zone }}", "service=compute", "metric=create_server{{ metric_suffix }}"]

  - name: Wait another 5 sec for coreos
    pause:
      seconds: 5
    tags: ["az={{ availability_zone }}", "service=compute", "metric=create_server{{ metric_suffix }}"]
    when: 
      - coreos is defined
      - coreos | bool

  - name: Try connecting
    retries: 10
    delay: 1
    command: "ssh -o 'UserKnownHostsFile=/dev/null' -o 'StrictHostKeyChecking=no' {{ ssh_user_name }}@{{ server_ip }} -i ~/.ssh/{{ server_keypair_name }}.pem"
    tags: ["az={{ availability_zone }}", "service=compute", "metric=create_server{{ metric_suffix }}"]
  
  always:
    - name: Debug server info
      debug:
        var: server
        
    - name: Delete server from {{ availability_zone }}
      openstack.cloud.server:
        state: absent
        name: "{{ server_id }}"
        delete_fip: True
      when: server_id is defined
      tags: ["metric=delete_server"]

    - name: Try to get deleted server info
      openstack.cloud.server_info:
        server: "{{ server_id }}"
      register: server

    - assert:
        that:
          - server.servers | length == 0
