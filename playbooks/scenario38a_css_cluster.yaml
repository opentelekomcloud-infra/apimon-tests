#Create CSS Cluster
---
- hosts: localhost
  vars:
    css_cluster_type: opensearch
    css_cluster_version: 1.3.6
    name_prefix: scenario38a
  tasks:
    - name: Set prefix
      set_fact:
        prefix: "{{ (name_prefix + ( lookup('env', 'TASK_EXECUTOR_JOB_ID') | default(99999999 | random | to_uuid | hash('md5'), true) ) ) }}"

    - name: Set facts
      set_fact:
        cluster_name: '{{ name_prefix + "-opensearch-cluster" }}'
        vpc_name: '{{ prefix + "-test-vpc" }}'
        subnet_name: '{{ prefix + "-test-subnet" }}'
        security_group_name: '{{ prefix + "-test-security-group" }}'

    - name: Create vpc
      opentelekomcloud.cloud.vpc:
        name: '{{ vpc_name }}'
        cidr: "192.168.0.0/24"
        state: present
        description: vpc for apimon css testing
      register: vpc

    - name: Create subnet
      opentelekomcloud.cloud.subnet:
        name: '{{ subnet_name }}'
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "192.168.0.0/24"
        description: subnet for apimon css testing
        gateway_ip: "192.168.0.1"
        dns_list:
          - "100.125.4.25"
          - "100.125.129.199"
    
    - name: Create security group
      opentelekomcloud.cloud.security_group:
        state: present
        name: '{{ security_group_name }}'
        description: security group for apimon css testing

    - block:

      - name: Create CSS cluster
        opentelekomcloud.cloud.css_cluster:
          name: '{{ cluster_name }}'
          datastore_type: '{{ css_cluster_type }}'
          datastore_version: '{{ css_cluster_version }}'
          state: present
          instance_num: 3
          volume_size: 40
          authority_enable: false
          volume_type: common
          router: '{{ vpc_name }}'
          net: '{{ subnet_name }}'
          security_group: '{{ security_group_name }}'
          flavor: 'css.xlarge.2'
          https_enable: false
          system_encrypted: 0
          tags:
          - 'key': "apimon-test"
            'value': "{{ name_prefix }}"

      - name: Pause for 3 minutes after creation
        ansible.builtin.pause:
          minutes: 3

      - name: Delete CSS cluster
        opentelekomcloud.cloud.css_cluster:
          name: '{{ cluster_name }}'
          state: absent

      - name: Pause for 2 minutes after deletion
        ansible.builtin.pause:
          minutes: 2

      always:
        - block:

          - name: Delete security group
            opentelekomcloud.cloud.security_group:
              state: absent
              name: '{{ security_group_name }}'

          - name: Delete subnet
            opentelekomcloud.cloud.subnet:
              name: '{{ subnet_name }}'
              vpc_id: "{{ vpc.vpc.id }}"
              state: absent

          - name: Delete vpc
            opentelekomcloud.cloud.vpc:
              name: '{{ vpc_name }}'
              state: absent
