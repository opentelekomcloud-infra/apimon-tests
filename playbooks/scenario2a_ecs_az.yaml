---

# Scenario to test ECS service in different AZs
# A VPC is created and VM is being started in different AZs
#
- name: Scenario 2a - Compute per AZ
  hosts: localhost
  vars:
    prefix: scenario2a-
    test_image: Standard_Fedora_38_latest

  tasks:
    - set_fact:
        prefix: "{{ (prefix + ( lookup('env', 'TASK_EXECUTOR_JOB_ID') | default(99999999 | random | to_uuid | hash('md5'), true) ) ) }}"

    - set_fact:
        test_server_fqdn: "{{ (prefix + '.host') }}"
        test_security_group_name: "{{ (prefix + '-sg') }}"
        test_keypair_name: "{{ (prefix + '-kp') }}"
        test_network_name: "{{ ( prefix + '-net') }}"
        keypair_private_key_dest: "{{ ('~/.ssh/' + (prefix + '-kp') + '.pem') }}"

    - name: Query specific flavor
      openstack.cloud.compute_flavor_info:
        name: "{{ test_flavor }}"
      register: flavor_result

    # using s2.medium.2 as fallback in case the flavor from inv is not available in the env
    - set_fact:
        test_flavor: s2.medium.2
      when: flavor_result.flavors | length==0

    - block:

      - name: Create KeyPair
        openstack.cloud.keypair:
          state: present
          name: "{{ test_keypair_name }}"
        register: keypair_output

      - name: Save private key
        copy:
          dest: "{{ keypair_private_key_dest }}"
          content: "{{ keypair_output['keypair']['private_key'] }}"
          mode: 0600

      - name: Create VPC
        include_role:
          name: vpc
        vars:
          network_name: "{{ test_network_name }}"

      - name: Create SG
        openstack.cloud.security_group:
          name: "{{ test_security_group_name }}"
          description: "dummy"

      - name: Create SG-Rule
        openstack.cloud.security_group_rule:
          security_group: "{{ test_security_group_name }}"
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
          remote_ip_prefix: 0.0.0.0/0

      - name: Get Availability zones
        opentelekomcloud.cloud.availability_zone_info:
        register: azs

      - name: "Create server in {{ item }}"
        include_role:
          name: server_create_delete
        vars:
          server_keypair_name: "{{ test_keypair_name }}"
          server_fqdn: "{{ (item['name'] + '.' + test_server_fqdn) }}"
          server_image: "{{ test_image }}"
          server_flavor: "{{ test_flavor }}"
          server_net: "{{ test_network_name }}"
          security_group: "{{ test_security_group_name }}"
          availability_zone: "{{ item['name'] }}"
          metric_suffix: ""
        loop: "{{ azs['availability_zones'] }}"

      always:
        # do something here
        - block:
            - name: Delete SG
              openstack.cloud.security_group:
                name: "{{ test_security_group_name }}"
                state: absent

            - name: Delete VPC
              include_role:
                name: vpc
              vars:
                state: absent
                network_name: "{{ test_network_name }}"

            - name: Delete KeyPair
              openstack.cloud.keypair:
                state: absent
                name: "{{ test_keypair_name }}"

            - name: delete private key
              file:
                path: "{{ keypair_private_key_dest }}"
                state: absent

            - name: Pause for 5 minutes to give Neutron time
              pause:
                minutes: 5
          ignore_errors: true
